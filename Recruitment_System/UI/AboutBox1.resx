<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>